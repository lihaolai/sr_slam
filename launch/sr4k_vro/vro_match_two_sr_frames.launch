<launch>

<arg name="data_dir" default="/home/davidz/work/data/SwissRanger4000/exp/dataset_82"/> <!-- 82 -->
<!-- env name="ROSCONSOLE_CONFIG_FILE" value="/home/davidz/work/ros_hydro_ws/src/sr_slam/launch/vro_console.config" / -->

<node pkg="sr_slam" type="test_vro" name="test_vro" output="screen">

  <param name="config/max_dist_for_inliers"          value="0.05"/> <!-- 0.05 "Mahalanobis distance for matches to be considered inliers by ransac"-->
  <param name="config/ransac_iterations"             value="1000" /> <!-- 200 -->
  <param name="config/b_ransac_fixed_iter"           value="true"/> <!-- weather to use fixed   -->
  <param name="config/store_pointclouds"  value="true"/>

  <!-- vro strategy -->
  <param name="config/vro_strategy"                 value="vro_my" /> <!-- " VRO strategy: VRO_ori, VRO_my, VRO_plane, VRO_plane_em" -->

  <!-- vro parameters -->
  <param name="vro_node_from_sr_data"         value="true"/> <!-- whether to read sr raw data  -->
  <param name="sr_data_prefix"                value="d1"/>
  <param name="sr_data_suffix"                value="bdat"/> <!-- dat --> 
  <param name="sr_new_file_version"           value="false"/> <!-- false true -->

  <param name="vro_tar_node_path"     value="$(arg data_dir)/d1_0724.bdat"/> <!-- older frame d1_0882.bdat -->
  <param name="vro_src_node_path"     value="$(arg data_dir)/d1_0726.bdat"/> <!-- new frame d1_0884.bdat -->

  <param name="plane_number_threshold"        value="0.1"/> <!-- minimal percent of points that deemed as a plane -->

  <param name="show_point_cloud"              value="true"/> <!-- whether to display point cloud  -->
  <param name="vro_single_match"                    value="true" /> <!-- true: match one pair, false: match 500 pairs -->
  <param name="vro_single_times"                    value="1" /> 
  <param name="vro_display_matches"                 value="true" /> <!-- whether to display the matched points -->
  <param name="vro_display_initial_matches"         value="true" /> <!-- whether to display the initial matched points-->

  <!-- Visual Features, to activate GPU-based features see CMakeLists.txt -->
  <param name="config/feature_detector_type"         value="SIFT"/><!-- SIFT SIFTGPU If SIFTGPU is enabled in CMakeLists.txt, use SURF here -->
  <param name="config/feature_extractor_type"        value="SIFT"/><!-- SIFT SIFTGPU If SIFTGPU is enabled in CMakeLists.txt, use SURF here -->
  <param name="config/min_keypoints"                 value="20"/><!-- Extract no less than this many ... -->
  <param name="config/min_matches"                   value="12"/> <!-- Minimal number of matched features before RANSAC 29? -->
  <param name="config/nn_distance_ratio"             value="0.5"/> <!-- 0.95 0.5/ 0.7 for SIFT, 0.95 for SIFTGPU Feature correspondence is valid if distance to nearest neighbour is smaller than this parameter times the distance to the 2nd neighbour. This needs to be 0.9-1.0 for SIFTGPU w/ FLANN, since SIFTGPU Features are normalized-->

  <!-- sift parameters -->
  <param name="sift_num_features"                   value="0" /> <!-- number of returned sift features -->
  <param name="sift_octave_layers"                  value="5" /> <!-- number octave layers -->
  <param name="sift_contrast_threshold"             value="0.02" /> <!-- 0.04 initial threshold for keypint detection -->
  <param name="siftgpu_contrast_threshold"          value="0.0008" /> <!-- 0.0018 initial DOG threshold for siftgpu -->
  <param name="siftgpu_edge_threshold"              value="10." /> <!-- edge threshold for siftgpu  -->

 </node>
</launch>
